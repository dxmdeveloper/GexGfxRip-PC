#pragma once
#include <stdlib.h>
#include <helpers/basicdefs.h>
#include <graphics/gfx.h>

const u8 gfx[] = {
    0x00,0x00,0x20,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x99,0xFF,0xFF,0x24,0x00,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x72,0x0D,0x52,0x00,0x30,0x31,0x38,0x37,
};

const u8 bmp[] = {
    0x08,0x00,0x20,0x00,0xE7,0xCE,0xB7,0xDE,0x5B,0xCC,0x55,0x34,0x54,0x45,0x55,0xAC,
    0xA8,0x34,0xB8,0x55,0xD4,0x7E,0xC4,0xCE,0xBC,0xCE,0x57,0x47,0x55,0x55,0xB9,0x9C,
    0x55,0x44,0x75,0x88,0xB3,0x4C,0xB4,0x7E,0x73,0xCE,0x35,0x33,0x85,0x56,0x75,0xB9,
    0x59,0x54,0x75,0x89,0x75,0x17,0xB1,0x3D,0x41,0xCD,0x15,0x11,0x54,0x55,0xA8,0xCC,
    0x9C,0x77,0x97,0xAB,0x99,0x04,0x50,0x0B,0x10,0xBC,0x03,0x11,0x43,0x75,0x45,0x85,
    0x98,0x9C,0xA9,0x48,0xBC,0x01,0x40,0x09,0x00,0xBC,0x00,0x30,0x44,0x75,0x34,0x33,
    0x74,0xCB,0x59,0x13,0x97,0x01,0x30,0x09,0x00,0xBC,0x00,0x41,0x44,0x65,0x35,
    0x11,0x44,0x95,0x39,0x11,0x9B,0x01,0x10,0x09,0x00,0xBC,0x00,0x43,0x48,0x84,
    0x48,0x11,0x21,0x53,0x37,0x33,0xBC,0x13,0x10,0x19,0x00,0xCC,0x11,0x54,
    0x44,0x85,0x47,0x24,0x31,0x43,0x55,0x34,0xBC,0x33,0x11,0x39,0x00,0xBC,0x33,
    0x57,0x54,0x96,0x49,0x33,0x54,0x44,0x88,0x35,0xCB,0x43,0x31,0x5B,0x11,0xCC,
    0x54,0x55,0x55,0xB5,0x35,0x33,0x44,0x53,0xB9,0x58,0x94,0x54,0x43,0x8C,0x43,
    0xCC,0x77,0x47,0x55,0x84,0x46,0x44,0x34,0x43,0x99,0xAB,0x71,0x75,0xB5,0x4D,
    0x54,0xCC,0x99,0x59,0x58,0x58,0x49,0x45,0x55,0x44,0x87,0xBA,0x51,0x95,0xBB,
    0x17,0xB4,0xCD,0xBB,0x99,0x48,0x45,0x86,0x88,0x68,0x78,0x88,0x88,0x51,0xB5,
    0xBC,0x13,0xB4,0xBC,0x99,0xB9,0x5A,0x45,0x65,0x35,0x33,0xA8,0x59,0x45,0x51,
    0xB4,0xCD,0x54,0xB5,0x59,0x79,0x75,0xA9,0x48,0x56,0x33,0x33,0x53,0x58,0x38,
    0x75,0x53,0xCC,0x55,0xB4,0x55,0x5B,0x53,0x9B,0x48,0x33,0x33,0x43,0x53,0x8A,
    0x45,0x97,0x94,0xDC,0x35,0x72,0x73,0x5C,0x33,0x97,0x35,0x31,0x44,0x78,0x45,
    0x54,0x55,0xDC,0xCB,0xDC,0x37,0x71,0x93,0x5C,0x31,0x75,0x58,0x44,0x55,0x89,
    0x45,0x65,0x95,0xEB,0xCD,0xDD,0x4B,0x93,0xC5,0x4C,0x31,0x55,0x88,0x66,0x67,
    0x45,0x33,0x56,0xA5,0xD3,0xBC,0xDD,0x9C,0xC7,0xDB,0x7C,0x41,0x5C,0x78,0x24,
    0x54,0x45,0x43,0x46,0xA4,0xB3,0x3B,0xDD,0xCD,0xCC,0xEC,0xBC,0x55,0x55,0x48,
    0x01,0x30,0x44,0x44,0x86,0x43,0xD7,0x0C,0xED,0xEE,0xDD,0xED,0xCC,0x79,0x55,
    0x48,0x33,0x43,0x44,0x44,0x97,0x11,0xDB,0x0C,0xE9,0xEE,0xEE,0xEE,0xDD,0x1B,
    0x53,0x58,0x44,0x44,0x44,0x44,0x99,0x11,0xD9,0x05,0xD3,0xEE,0xEE,0xEE,0xDD,
    0x7B,0x75,0x58,0x55,0x55,0x88,0x44,0x88,0x10,0xB1,0x15,0xD4,0xBC,0x94,0xED,
    0xCD,0xCC,0xCB,0x9B,0x88,0xA8,0x9C,0x96,0x3B,0x30,0x41,0x31,0xD5,0x17,0x11,
    0xDB,0x7C,0x97,0xCC,0xBC,0xA9,0xAA,0x45,0xC9,0x39,0x43,0x31,0x51,0xD7,0x14,
    0x11,0xC1,0x17,0x40,0x75,0x55,0xB8,0x8C,0x11,0xC7,0x4C,0x85,0x14,0x71,0xD7,
    0x54,0x13,0xC3,0x14,0x83,0x44,0xA5,0xA8,0x5A,0x33,0xB4,0x4B,0xA8,0x57,0x77,
    0xD7,0x55,0x13,0xD4,0x47,0x54,0x45,0xAB,0x55,0x5A,0x54,0x95,0x59,0xA8,0x3B,
    0x31,0x73,0x5D,0x10,0xD8,0x78,0x85,0x88,0x88,0x58,0x55,0x75,0x99,0x5B,0x54,
    0x1A,0x30,0x95,0x8D,0x10,0xD5,0x75,0x85,0x59,0x43,0x85,0x8A,0xA8,0x58,0x55,0x54,
};

int
combine_graphic_with_bmps_test()
{
    // gfx: GEX016.LEV off= 0x0008757C
    // bmp: GEX016.LEV off= 0x0001DAA8
    // SIMPLE TEST
    const void *bmp_ptr = bmp;
    u8 *full_gfx = gfx_combine_graphic_and_bitmaps_w_alloc(gfx, &bmp_ptr, 1);
    if (!full_gfx) return EXIT_FAILURE;

    if (memcmp(&full_gfx[36], &bmp[4], sizeof(bmp) - 4) != 0){
        free(full_gfx);
        return EXIT_FAILURE;
    }
    free(full_gfx);
    return EXIT_SUCCESS;
}